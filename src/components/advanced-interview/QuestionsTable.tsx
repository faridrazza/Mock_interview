import React from 'react';
import { CompanyInterviewQuestion, InterviewSuggestion } from '@/types/advancedInterview';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { ExternalLink } from 'lucide-react';

interface QuestionsTableProps {
  questions: CompanyInterviewQuestion[];
  suggestions: InterviewSuggestion[];
}

const QuestionsTable: React.FC<QuestionsTableProps> = ({ questions, suggestions }) => {
  // Add console logs for debugging
  console.log("QuestionsTable received questions:", questions);
  console.log("QuestionsTable received suggestions:", suggestions);
  
  return (
    <div className="space-y-6">
      <Card>
        <CardHeader>
          <CardTitle>Interview Questions</CardTitle>
          <CardDescription>
            These questions are generated by AI for your selected role and company.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="rounded-md border overflow-x-auto hidden md:block">
            <div className="grid grid-cols-12 gap-2 p-4 font-medium border-b bg-muted/50 min-w-[600px]">
              <div className="col-span-6">Question</div>
              <div className="col-span-2">Category</div>
              <div className="col-span-2">Year</div>
              <div className="col-span-2">References</div>
            </div>
            <div className="divide-y min-w-[600px]">
              {questions && questions.length > 0 ? (
                questions.map((question, index) => (
                  <div key={index} className="grid grid-cols-12 gap-2 p-4 items-center">
                    <div className="col-span-6">{question.questionText}</div>
                    <div className="col-span-2">
                      <Badge variant="outline" className="font-normal">
                        {question.category}
                      </Badge>
                    </div>
                    <div className="col-span-2 text-sm">{question.year}</div>
                    <div className="col-span-2 flex space-x-2">
                      {question.references && question.references.map((ref, refIndex) => (
                        <a 
                          key={refIndex} 
                          href={ref} 
                          target="_blank" 
                          rel="noopener noreferrer"
                          className="text-brand-500 hover:text-brand-600 dark:text-brand-400 dark:hover:text-brand-300"
                        >
                          <ExternalLink size={16} />
                        </a>
                      ))}
                    </div>
                  </div>
                ))
              ) : (
                <div className="p-4 text-center text-muted-foreground">No questions generated yet</div>
              )}
            </div>
          </div>

          {/* Mobile-friendly alternative view that shows on small screens */}
          <div className="space-y-4 md:hidden mt-4">
            {questions && questions.length > 0 ? (
              questions.map((question, index) => (
                <div key={`mobile-${index}`} className="rounded-md border p-3 space-y-2">
                  <div className="font-medium">{question.questionText}</div>
                  <div className="flex flex-wrap gap-2 items-center text-sm">
                    <Badge variant="outline" className="font-normal">
                      {question.category}
                    </Badge>
                    <span className="text-muted-foreground">{question.year}</span>
                    {question.references && question.references.length > 0 && (
                      <div className="flex space-x-2">
                        {question.references.map((ref, refIndex) => (
                          <a 
                            key={refIndex} 
                            href={ref} 
                            target="_blank" 
                            rel="noopener noreferrer"
                            className="text-brand-500 hover:text-brand-600 dark:text-brand-400 dark:hover:text-brand-300"
                          >
                            <ExternalLink size={14} />
                          </a>
                        ))}
                      </div>
                    )}
                  </div>
                </div>
              ))
            ) : (
              <div className="p-4 text-center text-muted-foreground">No questions generated yet</div>
            )}
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <CardTitle>Preparation Suggestions</CardTitle>
          <CardDescription>
            Expert recommendations to help you prepare for this specific interview.
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {suggestions && Array.isArray(suggestions) ? (
              suggestions.map((suggestion, index) => (
                <div key={index} className="rounded-lg border p-4">
                  <h3 className="font-medium mb-2">{suggestion.title}</h3>
                  <p className="text-sm text-muted-foreground">{suggestion.description}</p>
                </div>
              ))
            ) : (
              <div className="p-4 text-center text-muted-foreground">No suggestions available</div>
            )}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default QuestionsTable;
